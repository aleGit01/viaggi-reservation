## Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
spring.datasource.url = jdbc:mysql://localhost:3306/viaggi_reserv?useSSL=false
spring.datasource.username = root
spring.datasource.password = root


## Hibernate Properties
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = update

endpoints.shutdown.sensitive=false
endpoints.shutdown.enabled=true

#spring.cloud.stream.kafka.binder.brokers =192.168.2.111
#spring.cloud.stream.kafka.binder.zkNodes = 192.168.2.111
#spring.cloud.stream.kafka.timeWindow.length = 10000
#spring.cloud.stream.bindings.output.contentType = application/json
#spring.cloud.stream.kafka.streams.binder.configuration.commit.interval.ms = 1000
#spring.cloud.stream.kafka.streams.binder.configuration.default.key.serde = org.apache.kafka.common.serialization.Serdes$StringSerde
#spring.cloud.stream.kafka.streams.binder.configuration.default.value.serde = org.apache.kafka.common.serialization.Serdes$StringSerde

#spring.cloud.stream.bindings.output.destination = counts
#spring.cloud.stream.bindings.output.producer.headerMode: raw

#useNativeEncoding: true
#spring.cloud.stream.bindings.input.destination = words
#spring.cloud.stream.bindings.input.destination.consumer.headerMode: raw
#For testing
#spring.cloud.stream.bindings.input1.destination = counts
#spring.cloud.stream.bindings.output1.destination = words
#spring.cloud.stream.bindings.input1.binder = kafka
#spring.cloud.stream.bindings.output1.binder = kafka

